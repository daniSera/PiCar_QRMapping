<?xml version="1.0"?>
<robot name="car_model" xmlns:xacro="http://www.ros.org/wiki/xacro">

        <material name="black">
                <color rgba="0 0 0 1"/>
        </material>
        <material name="blue">
                <color rgba="0 0 0.8 1"/>
        </material>
        <material name="white">
                <color rgba="1 1 1 1"/>
        </material>
        <material name="gray">
                <color rgba="0.3 0.3 0.3 1"/>
        </material>

        <xacro:property name="PI" value="3.1415926535897931" />
        <xacro:property name="wheelradius" value="0.125" />
        <xacro:property name="baselength" value="0.5" />
        <xacro:property name="baseheight" value="${wheelradius}" />
        <xacro:property name="axlelength" value="0.4" />
        <xacro:property name="update_rate" value="5.0" />

        <xacro:property name="base_mass" value="1e+0" />
        <xacro:property name="axle_mass" value="1e-1" />
        <xacro:property name="wheel_mass" value="1e+0" />
        <xacro:property name="camera_mass" value="1e-2" />

        <xacro:macro name="gazebo_wheel_elements" >
                <mu1 value="300.0"/>
                <mu2 value="100.0"/>
                <kp value="100000.0" />
                <kd value="1.0" />
                <material>Gazebo/White</material>
        </xacro:macro>


        <xacro:macro name="default_inertial" params="mass">
                <inertial>
                        <mass value="${mass}" />
                        <inertia ixx="${mass*0.01}" ixy="0.0" ixz="0.0" iyy="${mass*0.01}" iyz="0.0" izz="${mass*0.01}" />
                </inertial>
        </xacro:macro>

        <xacro:macro name="world_link">
                <link name="base_footprint">
                        <visual>
                                <geometry>
                                        <box size="0.001 0.001 0.001"/>
                                </geometry>
                                <origin rpy="0 0 0" xyz="0.001 0.001 0.001"/>
                        </visual>
                        <collision>
                                <geometry>
                                        <box size="0.001 0.001 0.001"/>
                                </geometry>
                        </collision>
                        <xacro:default_inertial mass="${base_mass/1000}"/>
                </link>
                <gazebo reference="base_footprint">
                        <material>Gazebo/Green</material>
                </gazebo>
        </xacro:macro>


        <xacro:macro name="car_base">
                <link name="base_link">
                        <visual>
                                <geometry>
                                        <box size="${baselength/2} ${baselength} ${baselength/8}" />
                                </geometry>
                                <material name="black" />
                        </visual>
                        <collision>
                                <geometry>
                                        <box size="${baselength/2} ${baselength} ${baselength/8}" />
                                </geometry>
                        </collision>
                        <xacro:default_inertial mass="${base_mass}"/>
                </link>
                <joint name="base_footprint_joint" type="fixed">
                        <axis xyz="0 0 1" />
                        <parent link="base_footprint" />
                        <child link="base_link" />
                        <origin rpy="0 0 0" xyz="0 0 ${baseheight}" />
                </joint>
                <gazebo reference="base_link">
                        <material>Gazebo/Black</material>
                </gazebo>
        </xacro:macro>


        <xacro:macro name="car_axle" params="frontback position">
               <link name="${frontback}_axle">
                       <visual>
                               <geometry>
                                       <cylinder radius="${baselength/8}" length="${axlelength}" />
                               </geometry>
                               <material name="gray" />
                       </visual>
                       <collision>
                               <geometry>
                                       <cylinder radius="${baselength/8}" length="${axlelength}" />
                               </geometry>
                       </collision>
                       <xacro:default_inertial mass="${axle_mass}"/>
               </link>
               <joint name="${frontback}_axle_to_base" type="fixed">
                       <axis xyz="1 0 0" />
                       <mimic joint="base_footprint_joint" multiplier="1"/>
                       <parent link="base_footprint" />
                       <child link="${frontback}_axle" />
                       <origin rpy="0 -1.57 0" xyz="0 ${position * 0.3} ${baseheight}" />
               </joint>
               <gazebo reference="${frontback}_axle">
                       <material>Gazebo/Grey</material>
               </gazebo>
       </xacro:macro>

        <xacro:macro name="car_wheel" params="frontback leftright fb lr">
                <link name="${frontback}_${leftright}_wheel">
                        <visual>
                                <geometry>
                                        <cylinder radius="${wheelradius}" length="${wheelradius}" />
                                </geometry>
                                <material name="white" />
                        </visual>
                        <collision>
                                <geometry>
                                        <cylinder radius="${wheelradius}" length="${wheelradius}" />
                                </geometry>
                        </collision>
                        <xacro:default_inertial mass="${wheel_mass}"/>
                </link>
                <joint name="${frontback}_${leftright}_wheel_to_${frontback}_axle" type="continuous">
                        <axis xyz="0 0 1" />
                        <parent link="base_footprint" />
                        <child link="${frontback}_${leftright}_wheel" />
                        <origin rpy="0 -1.57 0" xyz="${-lr} ${fb} ${baseheight}" />
                </joint>
                <gazebo reference="${frontback}_${leftright}_wheel">
                        <xacro:gazebo_wheel_elements />
                </gazebo>
        </xacro:macro>

        <xacro:macro name="camera_link" params="height width">
                <link name="camera">
                        <visual>
                                <geometry>
                                        <box size="0.1 0.1 0.1"/>
                                </geometry>
                                <material name="black"/>
                        </visual>
                        <collision>
                                <geometry>
                                        <box size="0.1 0.1 0.1"/>
                                </geometry>
                        </collision>
                        <xacro:default_inertial mass="${camera_mass}"/>
                </link>

                <joint name="camera_joint" type="fixed">
                        <axis xyz="0 0 1" />
                        <origin xyz="0 ${(baselength/2)+(baselength/4)} ${baseheight}" rpy="0 0 1.57"/>
                        <parent link="base_footprint"/>
                        <child link="camera"/>
                </joint>
                
                <!-- Simple RGB Camera
                <gazebo reference="camera"> 
                        <material>Gazebo/Black</material>
                        <sensor name="camera" type="camera">
                        <visualize>true</visualize>
                        <update_rate>33.3</update_rate>
                        <camera name="camera"> 
                                <horizontal_fov>1.3962634</horizontal_fov>
                                <image>
                                        <width>${width}</width>
                                        <height>${height}</height>
                                        <format>R8G8B8</format>
                                </image>
                                <clip> 
                                        <near>0.02</near>
                                        <far>300</far>
                                </clip>
                                <noise>
                                        <type>gaussian</type>
                                        <mean>0.0</mean>
                                        <stddev>0.005</stddev>
                                </noise>
                        </camera>
                                <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                                        <alwaysOn>true</alwaysOn>
                                        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                                        <cameraName>camera</cameraName>
                                        <distortionK1>0.0</distortionK1>
                                        <distortionK2>0.0</distortionK2>
                                        <distortionK3>0.0</distortionK3>
                                        <distortionT1>0.0</distortionT1>
                                        <distortionT2>0.0</distortionT2>
                                        <frameName>/odom</frameName> 
                                        <hackBaseline>0.07</hackBaseline>
                                        <imageTopicName>image_raw</imageTopicName>

                                        <updateRate>0.00</updateRate>
                                </plugin>
                        </sensor>
                </gazebo>
                -->

        </xacro:macro>
 
        <xacro:include filename="$(find car_model)/urdf/_d435.urdf.xacro" />
        <xacro:sensor_d435 parent="base_footprint">
          <origin xyz="0 ${(baselength/2)+(baselength/4)} ${baseheight}" rpy="0 0 ${PI/2}"/>
        </xacro:sensor_d435>

        <xacro:world_link />
        <xacro:car_base />
        <xacro:camera_link height="480" width="640" />
        <xacro:car_axle frontback="front" position="1" />
        <xacro:car_axle frontback="back" position="-1" />
        <xacro:car_wheel frontback="front" leftright="left" fb="0.3" lr="${(axlelength/2) + 0.05}" />
        <xacro:car_wheel frontback="front" leftright="right" fb="0.3" lr="${-(axlelength/2) - 0.05}" />
        <xacro:car_wheel frontback="back" leftright="left" fb="-0.3" lr="${(axlelength/2) + 0.05}" />
        <xacro:car_wheel frontback="back" leftright="right" fb="-0.3" lr="${-(axlelength/2) - 0.05}" />


        <gazebo>
                <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
                        <broadcastTF>true</broadcastTF>
                        <commandTopic>/cmd_vel</commandTopic>
                        <covariance_x>0.000100</covariance_x>
                        <covariance_y>0.000100</covariance_y>
                        <covariance_yaw>1.57</covariance_yaw>
                        <leftFrontJoint>front_left_wheel_to_front_axle</leftFrontJoint>
                        <leftRearJoint>back_left_wheel_to_back_axle</leftRearJoint>
                        <odometryFrame>odom</odometryFrame>
                        <odometryTopic>/odom</odometryTopic>
                        <rightFrontJoint>front_right_wheel_to_front_axle</rightFrontJoint>
                        <rightRearJoint>back_right_wheel_to_back_axle</rightRearJoint>
                        <robotBaseFrame>base_footprint</robotBaseFrame>
                        <robotNamespace>car_model</robotNamespace>
                        <topicName>/cmd_vel</topicName>
                        <torque>20</torque>
                        <updateRate>100.0</updateRate>
                        <wheelDiameter>${wheelradius * 2}</wheelDiameter>
                        <wheelSeparation>${axlelength}</wheelSeparation>
                </plugin>
                <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
                        <robotNamespace>car_model</robotNamespace>
                </plugin>
        </gazebo>

</robot>
